<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>libmulti</name>
  <version>1.2.0</version>
  <packageID></packageID>
  <ProductID></ProductID>
  <date>05/05/21</date>
  <license>Free to use, also for commercial games.</license>
  <description></description>
  <helpfile></helpfile>
  <installdir></installdir>
  <classname></classname>
  <androidclassname></androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <maccompilerflags></maccompilerflags>
  <androidinject></androidinject>
  <androidmanifestinject></androidmanifestinject>
  <iosplistinject></iosplistinject>
  <androidactivityinject></androidactivityinject>
  <gradleinject></gradleinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <ConfigOptions>
    <Config name="Default">
      <CopyToMask>1048640</CopyToMask>
    </Config>
  </ConfigOptions>
  <androidPermissions/>
  <IncludedResources/>
  <files>
    <file>
      <filename>libmulti.dll</filename>
      <origname>extensions\libmulti.dll</origname>
      <init></init>
      <final></final>
      <kind>1</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>RegisterCallbacks</name>
          <externalName>RegisterCallbacks</externalName>
          <kind>1</kind>
          <help>RegisterCallbacks(please, dont, call, it) : Do not call this function at all.</help>
          <returnType>1</returnType>
          <argCount>4</argCount>
          <args>
            <arg>1</arg>
            <arg>1</arg>
            <arg>1</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>libmulti_init</name>
          <externalName>libmulti_init</externalName>
          <kind>1</kind>
          <help>libmulti_init() -&gt;real  :  Initializes the library.</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>libmulti_quit</name>
          <externalName>libmulti_quit</externalName>
          <kind>1</kind>
          <help>libmulti_quit() -&gt;real  :  Destroys all windows and frees the library resources.</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>libmulti_present</name>
          <externalName>libmulti_present</externalName>
          <kind>1</kind>
          <help>libmulti_present() -&gt;real  :  Returns true if the DLL is present and was loaded.</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>libmulti_exists</name>
          <externalName>libmulti_exists</externalName>
          <kind>1</kind>
          <help>libmulti_exists(window) -&gt;real  :  Checks if a window index is valid and the window exists.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_last_error_code</name>
          <externalName>libmulti_last_error_code</externalName>
          <kind>1</kind>
          <help>libmulti_last_error_code() -&gt;real  :  Returns the last WinAPI error code.</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>libmulti_last_error_message</name>
          <externalName>libmulti_last_error_message</externalName>
          <kind>1</kind>
          <help>libmulti_last_error_message() -&gt;string  :  Tries to turn the last WinAPI error code into a string.</help>
          <returnType>1</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>libmulti_create_window</name>
          <externalName>libmulti_create_window</externalName>
          <kind>1</kind>
          <help>libmulti_create_window(x, y, width, height, style, ex_style, sw_show, min_width, min_height, max_width, max_height) -&gt;real  :  Creates a new window.</help>
          <returnType>2</returnType>
          <argCount>11</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_destroy</name>
          <externalName>libmulti_destroy</externalName>
          <kind>1</kind>
          <help>libmulti_destroy(window) -&gt;real  :  Destroys a window.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_caption</name>
          <externalName>libmulti_set_caption</externalName>
          <kind>1</kind>
          <help>libmulti_set_caption(window, caption) -&gt;real  :  Sets the window caption.</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>libmulti_make_bitmap</name>
          <externalName>libmulti_make_bitmap</externalName>
          <kind>1</kind>
          <help>libmulti_make_bitmap(window, width, height, buffer_ADDRESS) -&gt;real  :  Draws a surface buffer inside the window.</help>
          <returnType>2</returnType>
          <argCount>4</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_game_window</name>
          <externalName>libmulti_set_game_window</externalName>
          <kind>1</kind>
          <help>libmulti_set_game_window(window_handle_result) -&gt;real  :  Tells the extension which window is managed by GM.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>1</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_active_window</name>
          <externalName>libmulti_set_active_window</externalName>
          <kind>1</kind>
          <help>libmulti_set_active_window(window) -&gt;real  :  Sets the passed window as active.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_foreground_window</name>
          <externalName>libmulti_set_foreground_window</externalName>
          <kind>1</kind>
          <help>libmulti_set_foreground_window(window) -&gt;real  :  Sets the passed window as foreground.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_has_focus</name>
          <externalName>libmulti_has_focus</externalName>
          <kind>1</kind>
          <help>libmulti_has_focus(window) -&gt;real  :  Checks if the passed window is in focus or not.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_active_window</name>
          <externalName>libmulti_get_active_window</externalName>
          <kind>1</kind>
          <help>libmulti_get_active_window() -&gt;real  :  Gets the index of the current active window.</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>libmulti_get_foreground_window</name>
          <externalName>libmulti_get_foreground_window</externalName>
          <kind>1</kind>
          <help>libmulti_get_foreground_window() -&gt;real  :  Gets the index of the current foreground window.</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>libmulti_get_x</name>
          <externalName>libmulti_get_x</externalName>
          <kind>1</kind>
          <help>libmulti_get_x(window) -&gt;real  :  Gets the X coord of the client area of the window.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_y</name>
          <externalName>libmulti_get_y</externalName>
          <kind>1</kind>
          <help>libmulti_get_y(window) -&gt;real  :  Gets the Y coord of the client area of the window.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_width</name>
          <externalName>libmulti_get_width</externalName>
          <kind>1</kind>
          <help>libmulti_get_width(window) -&gt;real  :  Gets the width of the client area of the window.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_height</name>
          <externalName>libmulti_get_height</externalName>
          <kind>1</kind>
          <help>libmulti_get_height(window) -&gt;real  :  Gets the height of the client area of the window.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_x</name>
          <externalName>libmulti_set_x</externalName>
          <kind>1</kind>
          <help>libmulti_set_x(window, new_x) -&gt;real  :  Sets the X position of the client area of the window.</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_y</name>
          <externalName>libmulti_set_y</externalName>
          <kind>1</kind>
          <help>libmulti_set_y(window, new_y) -&gt;real  :  Sets the Y position of the client area of the window.</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_width</name>
          <externalName>libmulti_set_width</externalName>
          <kind>1</kind>
          <help>libmulti_set_width(window, new_width) -&gt;real  :  Sets the width of the client area of the window.</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_height</name>
          <externalName>libmulti_set_height</externalName>
          <kind>1</kind>
          <help>libmulti_set_height(window, new_height) -&gt;real  :  Sets the height of the client area of the window.</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_position</name>
          <externalName>libmulti_set_position</externalName>
          <kind>1</kind>
          <help>libmulti_set_position(window, x, y) -&gt;real  :  Sets the position of the client area of the window.</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_size</name>
          <externalName>libmulti_set_size</externalName>
          <kind>1</kind>
          <help>libmulti_set_size(window, new_width, new_height) -&gt;real  :  Sets the size of the client area of the window.</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_rectangle</name>
          <externalName>libmulti_set_rectangle</externalName>
          <kind>1</kind>
          <help>libmulti_set_rectangle(window, new_x, new_y, new_width, new_height) -&gt;real  :  Sets the window's client area rectangle.</help>
          <returnType>2</returnType>
          <argCount>5</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_nonclient_left</name>
          <externalName>libmulti_get_nonclient_left</externalName>
          <kind>1</kind>
          <help>libmulti_get_nonclient_left(window) -&gt;real  :  Gets the left offset of the window's non-client area.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_nonclient_top</name>
          <externalName>libmulti_get_nonclient_top</externalName>
          <kind>1</kind>
          <help>libmulti_get_nonclient_top(window) -&gt;real  :  Gets the top offset of the window's non-client area.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_nonclient_right</name>
          <externalName>libmulti_get_nonclient_right</externalName>
          <kind>1</kind>
          <help>libmulti_get_nonclient_right(window) -&gt;real  :  Gets the right offset of the window's non-client area.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_nonclient_bottom</name>
          <externalName>libmulti_get_nonclient_bottom</externalName>
          <kind>1</kind>
          <help>libmulti_get_nonclient_bottom(window) -&gt;real  :  Gets the bottom offset of the window's non-client area.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_caption</name>
          <externalName>libmulti_get_caption</externalName>
          <kind>1</kind>
          <help>libmulti_get_caption(window) -&gt;string  :  Gets the window's caption.</help>
          <returnType>1</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_window_style</name>
          <externalName>libmulti_set_window_style</externalName>
          <kind>1</kind>
          <help>libmulti_set_window_style(window, is_extended, style_value) -&gt;real  :  Sets the extended or window style.</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_window_style</name>
          <externalName>libmulti_get_window_style</externalName>
          <kind>1</kind>
          <help>libmulti_get_window_style(window, is_extended) -&gt;real  :  Gets the window or the extended style.</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_min_width</name>
          <externalName>libmulti_set_min_width</externalName>
          <kind>1</kind>
          <help>libmulti_set_min_width(window, new_min_width) -&gt;real  :  Sets the minimum allowed width of the window.</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_min_height</name>
          <externalName>libmulti_set_min_height</externalName>
          <kind>1</kind>
          <help>libmulti_set_min_height(window, new_min_height) -&gt;real  :  Sets the minimum allowed height of the window.</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_max_width</name>
          <externalName>libmulti_set_max_width</externalName>
          <kind>1</kind>
          <help>libmulti_set_max_width(window, new_max_width) -&gt;real  :  Sets the maximum allowed width of the window.</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_max_height</name>
          <externalName>libmulti_set_max_height</externalName>
          <kind>1</kind>
          <help>libmulti_set_max_height(window, new_max_height) -&gt;real  :  Sets the maximum allowed height of the window.</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_min_size</name>
          <externalName>libmulti_set_min_size</externalName>
          <kind>1</kind>
          <help>libmulti_set_min_size(window, new_min_width, new_min_height) -&gt;real  :  Sets the minimum allowed size of the window.</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_set_max_size</name>
          <externalName>libmulti_set_max_size</externalName>
          <kind>1</kind>
          <help>libmulti_set_max_size(window, new_max_width, new_max_height) -&gt;real  :  Sets the maximum allowed size of the window.</help>
          <returnType>2</returnType>
          <argCount>3</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_min_width</name>
          <externalName>libmulti_get_min_width</externalName>
          <kind>1</kind>
          <help>libmulti_get_min_width(window) -&gt;real  :  Gets the minimum allowed width of the window.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_min_height</name>
          <externalName>libmulti_get_min_height</externalName>
          <kind>1</kind>
          <help>libmulti_get_min_height(window) -&gt;real  :  Gets the minimum allowed height of the window.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_max_width</name>
          <externalName>libmulti_get_max_width</externalName>
          <kind>1</kind>
          <help>libmulti_get_max_width(window) -&gt;real  :  Gets the maximum allowed width of the window.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_get_max_height</name>
          <externalName>libmulti_get_max_height</externalName>
          <kind>1</kind>
          <help>libmulti_get_max_height(window) -&gt;real  :  Gets the maximum allowed height of the window.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_mouse_get_x</name>
          <externalName>libmulti_mouse_get_x</externalName>
          <kind>1</kind>
          <help>libmulti_mouse_get_x(window) -&gt;real  :  Gets the last X mouse coord relative to the window's client area.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>libmulti_mouse_get_y</name>
          <externalName>libmulti_mouse_get_y</externalName>
          <kind>1</kind>
          <help>libmulti_mouse_get_y(window) -&gt;real  :  Gets the last Y mouse coord relative to the window's client area.</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
  </files>
</extension>
